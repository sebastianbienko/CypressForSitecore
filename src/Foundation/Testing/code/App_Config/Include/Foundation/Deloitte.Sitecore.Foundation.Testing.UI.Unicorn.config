<!--
	Unicorn.Configs.Default.config

	This is an example of how to configure a basic Unicorn configuration using your own config patch file.
	Copy this file to use as a basis for your own configuration definitions.

	Enabled configuration definition patches should be present on all environments Unicorn is present on.

	See Unicorn.config for commentary on how configurations operate, or https://github.com/kamsar/Unicorn/blob/master/README.md
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <unicorn>
      <configurations>
        <configuration name="Foundation.Testing.UI">
          <targetDataStore physicalRootPath="C:\Projects\Deloitte.Sitecore.Cypress\src\Foundation\Testing\serialization" />
          <predicate>
            <!--
							PREDICATE
							
							The predicate controls what items are included in the configuration.
							
							Each include can also exclude specific subitems in various ways. For a reference of the most current predicate grammar, consult the tests here:
							https://github.com/kamsar/Unicorn/blob/master/src/Unicorn.Tests/Predicates/TestConfiguration.xml

							NOTE: after changing what is included or excluded, you should reserialize all items, or at least the added items for additions.
							NOTE: the "name" attribute controls the folder name the items will go into. If unspecified, the last path segment is used. Names must be unique across the configuration.
							NOTE: You cannot use excludes with Transparent Sync. See https://github.com/kamsar/Unicorn/wiki/The-Transparent-Sync-Guide
							NOTE: If your configuration is named in Helix format (Layer.Module), you can use $(layer) and $(module) here as variables.
						-->

            <include database="core" name="TestingChunk" path="/sitecore/content/Applications/Content Editor/Ribbons/Chunks/Testing" />
            <include database="core" name="ReferenceInReviewStrip" path="/sitecore/content/Applications/Content Editor/Ribbons/Strips/Review/Testing" />
          </predicate>

          <!--
						SYNC TYPE
						
						Traditional Sync (the default) updates the state of the database only when a sync operation is run. It supports additional operations but can be more of a chore to remember to sync.
						Transparent Sync (preferred) updates the state of Sitecore instantly as soon as changes to files occur. It is optimal for development purposes, but has a few limitations.
						See the guide to help decide: https://github.com/kamsar/Unicorn/wiki/The-Transparent-Sync-Guide
					-->
          <dataProviderConfiguration enableTransparentSync="false" />

          <!-- 
						SYNC CONFIGURATION
					
						UpdateLinkDatabase: If true, the links will be updated for synced items after the sync has completed. If false (default) links are not updated for performance.
							Updating links is important if you are syncing user-facing content where link tracking is important. It is not very important for system items (templates/renderings).
						
						UpdateSearchIndex: If true, the search index(es) containing the item will be updated with item changes after the sync has completed. If false, indexing will not be updated for performance.
							Updating the index is important for content that relies on indexing, which may include most user-facing content items. Most of the time templates and renderings don't need indexing.
						
						NOTE: UpdateLinkDatabase and UpdateSearchIndex also apply to items that are reloaded from disk when using Transparent Sync, as well as normal Sync.
						NOTE: Updating the links and search indexes will cause significant performance degradation during syncing.
					-->
          <syncConfiguration updateLinkDatabase="false" updateSearchIndex="false" />
        </configuration>
      </configurations>
    </unicorn>
  </sitecore>
</configuration>
